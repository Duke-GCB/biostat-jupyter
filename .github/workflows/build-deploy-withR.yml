name: Build and deploy Python plus R kernel container

on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        default: ghcr.io
      image_name:
        required: false
        type: string
        default: ${{ github.repository }}
      tf_version:
        required: false
        type: string
      cuda:
        required: false
        type: boolean
        default: false
      base_tag:
        required: false
        type: string
      tag_suffix:
        required: false
        type: string
      tag_latest:
        required: false
        type: boolean
        default: false
      multiplatform:
        required: false
        type: boolean
        default: false
      image_description:
        required: false
        type: string
        default: Combines the Docker Stacks tensorflow-notebook, pytorch-notebook, and r-notebook containers plus jupytext and custom package additions.

jobs:
  common-steps:
    runs-on: ubuntu-latest
    steps:
      # Image with CUDA needs extra disk space
      - name: Free disk space ðŸ§¹
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false
        if: inputs.cuda

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        env:
          suffix: ${{ inputs.tag_suffix && inputs.tag_suffix || format('{0}-tf{1}', inputs.cuda && '-cuda' || '', inputs.tf_version) }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          flavor: |
            suffix=${{ env.suffix }},onlatest=${{ ! inputs.tag_latest }}
            latest=${{ inputs.tag_latest && inputs.tag_latest || 'auto' }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && !inputs.tag_latest }}
            type=raw,value={{date 'YYYY'}},enable={{is_default_branch}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.description=${{ inputs.image_description }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BASE_TAG=${{ inputs.base_tag && inputs.base_tag || format('latest-py{0}-tf{1}', inputs.cuda && '-cuda' || '', inputs.tf_version) }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
